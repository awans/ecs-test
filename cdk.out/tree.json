{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "ecs-stack": {
        "id": "ecs-stack",
        "path": "ecs-stack",
        "children": {
          "prod": {
            "id": "prod",
            "path": "ecs-stack/prod",
            "children": {
              "VPC": {
                "id": "VPC",
                "path": "ecs-stack/prod/VPC",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "ecs-stack/prod/VPC/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/21",
                        "enableDnsHostnames": true,
                        "enableDnsSupport": true,
                        "instanceTenancy": "default",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-stack/prod/VPC"
                          }
                        ]
                      }
                    }
                  },
                  "PublicSubnet1": {
                    "id": "PublicSubnet1",
                    "path": "ecs-stack/prod/VPC/PublicSubnet1",
                    "children": {
                      "Subnet": {
                        "id": "Subnet",
                        "path": "ecs-stack/prod/VPC/PublicSubnet1/Subnet",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                          "aws:cdk:cloudformation:props": {
                            "cidrBlock": "10.0.0.0/23",
                            "vpcId": {
                              "Ref": "prodVPC05D050A5"
                            },
                            "availabilityZone": {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::GetAZs": ""
                                }
                              ]
                            },
                            "mapPublicIpOnLaunch": true,
                            "tags": [
                              {
                                "key": "Name",
                                "value": "ecs-stack/prod/VPC/PublicSubnet1"
                              },
                              {
                                "key": "aws-cdk:subnet-name",
                                "value": "Public"
                              },
                              {
                                "key": "aws-cdk:subnet-type",
                                "value": "Public"
                              }
                            ]
                          }
                        }
                      },
                      "Acl": {
                        "id": "Acl",
                        "path": "ecs-stack/prod/VPC/PublicSubnet1/Acl"
                      },
                      "RouteTable": {
                        "id": "RouteTable",
                        "path": "ecs-stack/prod/VPC/PublicSubnet1/RouteTable",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                          "aws:cdk:cloudformation:props": {
                            "vpcId": {
                              "Ref": "prodVPC05D050A5"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "ecs-stack/prod/VPC/PublicSubnet1"
                              }
                            ]
                          }
                        }
                      },
                      "RouteTableAssociation": {
                        "id": "RouteTableAssociation",
                        "path": "ecs-stack/prod/VPC/PublicSubnet1/RouteTableAssociation",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "prodVPCPublicSubnet1RouteTable44708A45"
                            },
                            "subnetId": {
                              "Ref": "prodVPCPublicSubnet1SubnetBD79F0E4"
                            }
                          }
                        }
                      },
                      "DefaultRoute": {
                        "id": "DefaultRoute",
                        "path": "ecs-stack/prod/VPC/PublicSubnet1/DefaultRoute",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "prodVPCPublicSubnet1RouteTable44708A45"
                            },
                            "destinationCidrBlock": "0.0.0.0/0",
                            "gatewayId": {
                              "Ref": "prodVPCIGW0B427BB6"
                            }
                          }
                        }
                      },
                      "EIP": {
                        "id": "EIP",
                        "path": "ecs-stack/prod/VPC/PublicSubnet1/EIP",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                          "aws:cdk:cloudformation:props": {
                            "domain": "vpc",
                            "tags": [
                              {
                                "key": "Name",
                                "value": "ecs-stack/prod/VPC/PublicSubnet1"
                              }
                            ]
                          }
                        }
                      },
                      "NATGateway": {
                        "id": "NATGateway",
                        "path": "ecs-stack/prod/VPC/PublicSubnet1/NATGateway",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                          "aws:cdk:cloudformation:props": {
                            "allocationId": {
                              "Fn::GetAtt": [
                                "prodVPCPublicSubnet1EIPE7EB2C15",
                                "AllocationId"
                              ]
                            },
                            "subnetId": {
                              "Ref": "prodVPCPublicSubnet1SubnetBD79F0E4"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "ecs-stack/prod/VPC/PublicSubnet1"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "PublicSubnet2": {
                    "id": "PublicSubnet2",
                    "path": "ecs-stack/prod/VPC/PublicSubnet2",
                    "children": {
                      "Subnet": {
                        "id": "Subnet",
                        "path": "ecs-stack/prod/VPC/PublicSubnet2/Subnet",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                          "aws:cdk:cloudformation:props": {
                            "cidrBlock": "10.0.2.0/23",
                            "vpcId": {
                              "Ref": "prodVPC05D050A5"
                            },
                            "availabilityZone": {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::GetAZs": ""
                                }
                              ]
                            },
                            "mapPublicIpOnLaunch": true,
                            "tags": [
                              {
                                "key": "Name",
                                "value": "ecs-stack/prod/VPC/PublicSubnet2"
                              },
                              {
                                "key": "aws-cdk:subnet-name",
                                "value": "Public"
                              },
                              {
                                "key": "aws-cdk:subnet-type",
                                "value": "Public"
                              }
                            ]
                          }
                        }
                      },
                      "Acl": {
                        "id": "Acl",
                        "path": "ecs-stack/prod/VPC/PublicSubnet2/Acl"
                      },
                      "RouteTable": {
                        "id": "RouteTable",
                        "path": "ecs-stack/prod/VPC/PublicSubnet2/RouteTable",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                          "aws:cdk:cloudformation:props": {
                            "vpcId": {
                              "Ref": "prodVPC05D050A5"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "ecs-stack/prod/VPC/PublicSubnet2"
                              }
                            ]
                          }
                        }
                      },
                      "RouteTableAssociation": {
                        "id": "RouteTableAssociation",
                        "path": "ecs-stack/prod/VPC/PublicSubnet2/RouteTableAssociation",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "prodVPCPublicSubnet2RouteTableFE407696"
                            },
                            "subnetId": {
                              "Ref": "prodVPCPublicSubnet2SubnetBD0F8E17"
                            }
                          }
                        }
                      },
                      "DefaultRoute": {
                        "id": "DefaultRoute",
                        "path": "ecs-stack/prod/VPC/PublicSubnet2/DefaultRoute",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "prodVPCPublicSubnet2RouteTableFE407696"
                            },
                            "destinationCidrBlock": "0.0.0.0/0",
                            "gatewayId": {
                              "Ref": "prodVPCIGW0B427BB6"
                            }
                          }
                        }
                      },
                      "EIP": {
                        "id": "EIP",
                        "path": "ecs-stack/prod/VPC/PublicSubnet2/EIP",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                          "aws:cdk:cloudformation:props": {
                            "domain": "vpc",
                            "tags": [
                              {
                                "key": "Name",
                                "value": "ecs-stack/prod/VPC/PublicSubnet2"
                              }
                            ]
                          }
                        }
                      },
                      "NATGateway": {
                        "id": "NATGateway",
                        "path": "ecs-stack/prod/VPC/PublicSubnet2/NATGateway",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                          "aws:cdk:cloudformation:props": {
                            "allocationId": {
                              "Fn::GetAtt": [
                                "prodVPCPublicSubnet2EIPB7299D42",
                                "AllocationId"
                              ]
                            },
                            "subnetId": {
                              "Ref": "prodVPCPublicSubnet2SubnetBD0F8E17"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "ecs-stack/prod/VPC/PublicSubnet2"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "PrivateSubnet1": {
                    "id": "PrivateSubnet1",
                    "path": "ecs-stack/prod/VPC/PrivateSubnet1",
                    "children": {
                      "Subnet": {
                        "id": "Subnet",
                        "path": "ecs-stack/prod/VPC/PrivateSubnet1/Subnet",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                          "aws:cdk:cloudformation:props": {
                            "cidrBlock": "10.0.4.0/23",
                            "vpcId": {
                              "Ref": "prodVPC05D050A5"
                            },
                            "availabilityZone": {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::GetAZs": ""
                                }
                              ]
                            },
                            "mapPublicIpOnLaunch": false,
                            "tags": [
                              {
                                "key": "Name",
                                "value": "ecs-stack/prod/VPC/PrivateSubnet1"
                              },
                              {
                                "key": "aws-cdk:subnet-name",
                                "value": "Private"
                              },
                              {
                                "key": "aws-cdk:subnet-type",
                                "value": "Private"
                              }
                            ]
                          }
                        }
                      },
                      "Acl": {
                        "id": "Acl",
                        "path": "ecs-stack/prod/VPC/PrivateSubnet1/Acl"
                      },
                      "RouteTable": {
                        "id": "RouteTable",
                        "path": "ecs-stack/prod/VPC/PrivateSubnet1/RouteTable",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                          "aws:cdk:cloudformation:props": {
                            "vpcId": {
                              "Ref": "prodVPC05D050A5"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "ecs-stack/prod/VPC/PrivateSubnet1"
                              }
                            ]
                          }
                        }
                      },
                      "RouteTableAssociation": {
                        "id": "RouteTableAssociation",
                        "path": "ecs-stack/prod/VPC/PrivateSubnet1/RouteTableAssociation",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "prodVPCPrivateSubnet1RouteTableB86A28E0"
                            },
                            "subnetId": {
                              "Ref": "prodVPCPrivateSubnet1Subnet6794AAA7"
                            }
                          }
                        }
                      },
                      "DefaultRoute": {
                        "id": "DefaultRoute",
                        "path": "ecs-stack/prod/VPC/PrivateSubnet1/DefaultRoute",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "prodVPCPrivateSubnet1RouteTableB86A28E0"
                            },
                            "destinationCidrBlock": "0.0.0.0/0",
                            "natGatewayId": {
                              "Ref": "prodVPCPublicSubnet1NATGateway3F669DFC"
                            }
                          }
                        }
                      }
                    }
                  },
                  "PrivateSubnet2": {
                    "id": "PrivateSubnet2",
                    "path": "ecs-stack/prod/VPC/PrivateSubnet2",
                    "children": {
                      "Subnet": {
                        "id": "Subnet",
                        "path": "ecs-stack/prod/VPC/PrivateSubnet2/Subnet",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                          "aws:cdk:cloudformation:props": {
                            "cidrBlock": "10.0.6.0/23",
                            "vpcId": {
                              "Ref": "prodVPC05D050A5"
                            },
                            "availabilityZone": {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::GetAZs": ""
                                }
                              ]
                            },
                            "mapPublicIpOnLaunch": false,
                            "tags": [
                              {
                                "key": "Name",
                                "value": "ecs-stack/prod/VPC/PrivateSubnet2"
                              },
                              {
                                "key": "aws-cdk:subnet-name",
                                "value": "Private"
                              },
                              {
                                "key": "aws-cdk:subnet-type",
                                "value": "Private"
                              }
                            ]
                          }
                        }
                      },
                      "Acl": {
                        "id": "Acl",
                        "path": "ecs-stack/prod/VPC/PrivateSubnet2/Acl"
                      },
                      "RouteTable": {
                        "id": "RouteTable",
                        "path": "ecs-stack/prod/VPC/PrivateSubnet2/RouteTable",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                          "aws:cdk:cloudformation:props": {
                            "vpcId": {
                              "Ref": "prodVPC05D050A5"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "ecs-stack/prod/VPC/PrivateSubnet2"
                              }
                            ]
                          }
                        }
                      },
                      "RouteTableAssociation": {
                        "id": "RouteTableAssociation",
                        "path": "ecs-stack/prod/VPC/PrivateSubnet2/RouteTableAssociation",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "prodVPCPrivateSubnet2RouteTableCDBE868D"
                            },
                            "subnetId": {
                              "Ref": "prodVPCPrivateSubnet2Subnet04B92CA7"
                            }
                          }
                        }
                      },
                      "DefaultRoute": {
                        "id": "DefaultRoute",
                        "path": "ecs-stack/prod/VPC/PrivateSubnet2/DefaultRoute",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "prodVPCPrivateSubnet2RouteTableCDBE868D"
                            },
                            "destinationCidrBlock": "0.0.0.0/0",
                            "natGatewayId": {
                              "Ref": "prodVPCPublicSubnet2NATGatewayF40B99E5"
                            }
                          }
                        }
                      }
                    }
                  },
                  "IGW": {
                    "id": "IGW",
                    "path": "ecs-stack/prod/VPC/IGW",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-stack/prod/VPC"
                          }
                        ]
                      }
                    }
                  },
                  "VPCGW": {
                    "id": "VPCGW",
                    "path": "ecs-stack/prod/VPC/VPCGW",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "prodVPC05D050A5"
                        },
                        "internetGatewayId": {
                          "Ref": "prodVPCIGW0B427BB6"
                        }
                      }
                    }
                  }
                }
              },
              "ALB": {
                "id": "ALB",
                "path": "ecs-stack/prod/ALB",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "ecs-stack/prod/ALB/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                      "aws:cdk:cloudformation:props": {
                        "scheme": "internet-facing",
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "prodALBSecurityGroup73EC3DD1",
                              "GroupId"
                            ]
                          }
                        ],
                        "subnets": [
                          {
                            "Ref": "prodVPCPublicSubnet1SubnetBD79F0E4"
                          },
                          {
                            "Ref": "prodVPCPublicSubnet2SubnetBD0F8E17"
                          }
                        ],
                        "type": "application"
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "ecs-stack/prod/ALB/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-stack/prod/ALB/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "Automatically created Security Group for ELB ecsstackprodALB15656B4B",
                            "securityGroupIngress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "ipProtocol": "tcp",
                                "fromPort": 80,
                                "toPort": 80,
                                "description": "Allow from anyone on port 80"
                              },
                              {
                                "cidrIp": "0.0.0.0/0",
                                "ipProtocol": "tcp",
                                "fromPort": 443,
                                "toPort": 443,
                                "description": "Allow from anyone on port 443"
                              }
                            ],
                            "vpcId": {
                              "Ref": "prodVPC05D050A5"
                            }
                          }
                        }
                      },
                      "to ecsstackprodFargateServiceSecurityGroup3F6B27D3:5000": {
                        "id": "to ecsstackprodFargateServiceSecurityGroup3F6B27D3:5000",
                        "path": "ecs-stack/prod/ALB/SecurityGroup/to ecsstackprodFargateServiceSecurityGroup3F6B27D3:5000",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                          "aws:cdk:cloudformation:props": {
                            "groupId": {
                              "Fn::GetAtt": [
                                "prodALBSecurityGroup73EC3DD1",
                                "GroupId"
                              ]
                            },
                            "ipProtocol": "tcp",
                            "description": "Load balancer to target",
                            "destinationSecurityGroupId": {
                              "Fn::GetAtt": [
                                "prodFargateServiceSecurityGroup5FF63DF0",
                                "GroupId"
                              ]
                            },
                            "fromPort": 5000,
                            "toPort": 5000
                          }
                        }
                      }
                    }
                  },
                  "HTTPListener": {
                    "id": "HTTPListener",
                    "path": "ecs-stack/prod/ALB/HTTPListener",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-stack/prod/ALB/HTTPListener/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                          "aws:cdk:cloudformation:props": {
                            "defaultActions": [
                              {
                                "redirectConfig": {
                                  "protocol": "HTTPS",
                                  "statusCode": "HTTP_301"
                                },
                                "type": "redirect"
                              }
                            ],
                            "loadBalancerArn": {
                              "Ref": "prodALB6014B766"
                            },
                            "port": 80,
                            "protocol": "HTTP"
                          }
                        }
                      }
                    }
                  },
                  "HTTPSListener": {
                    "id": "HTTPSListener",
                    "path": "ecs-stack/prod/ALB/HTTPSListener",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-stack/prod/ALB/HTTPSListener/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                          "aws:cdk:cloudformation:props": {
                            "defaultActions": [
                              {
                                "targetGroupArn": {
                                  "Ref": "prodALBHTTPSListenerFargateServiceTargetGroup0990BEE5"
                                },
                                "type": "forward"
                              }
                            ],
                            "loadBalancerArn": {
                              "Ref": "prodALB6014B766"
                            },
                            "port": 443,
                            "protocol": "HTTPS",
                            "certificates": [
                              {
                                "certificateArn": "arn:aws:acm:us-west-1:312093006778:certificate/e00b73a0-f919-4ea0-a2d8-81f985331665"
                              }
                            ]
                          }
                        }
                      },
                      "FargateServiceTargetGroup": {
                        "id": "FargateServiceTargetGroup",
                        "path": "ecs-stack/prod/ALB/HTTPSListener/FargateServiceTargetGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ecs-stack/prod/ALB/HTTPSListener/FargateServiceTargetGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                              "aws:cdk:cloudformation:props": {
                                "port": 5000,
                                "protocol": "HTTP",
                                "targetType": "ip",
                                "vpcId": {
                                  "Ref": "prodVPC05D050A5"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Cluster": {
                "id": "Cluster",
                "path": "ecs-stack/prod/Cluster",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "ecs-stack/prod/Cluster/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                      "aws:cdk:cloudformation:props": {}
                    }
                  }
                }
              },
              "TaskDef": {
                "id": "TaskDef",
                "path": "ecs-stack/prod/TaskDef",
                "children": {
                  "TaskRole": {
                    "id": "TaskRole",
                    "path": "ecs-stack/prod/TaskDef/TaskRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-stack/prod/TaskDef/TaskRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "ecs-stack/prod/TaskDef/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                      "aws:cdk:cloudformation:props": {
                        "containerDefinitions": [
                          {
                            "essential": true,
                            "image": {
                              "Fn::Join": [
                                "",
                                [
                                  "312093006778.dkr.ecr.us-west-1.",
                                  {
                                    "Ref": "AWS::URLSuffix"
                                  },
                                  "/ecs-experiment:latest"
                                ]
                              ]
                            },
                            "name": "Web",
                            "portMappings": [
                              {
                                "containerPort": 5000,
                                "protocol": "tcp"
                              }
                            ],
                            "logConfiguration": {
                              "logDriver": "awslogs",
                              "options": {
                                "awslogs-group": {
                                  "Ref": "prodTaskDefWebLogGroup785DE79F"
                                },
                                "awslogs-stream-prefix": "prod-ECSCluster",
                                "awslogs-region": {
                                  "Ref": "AWS::Region"
                                }
                              }
                            },
                            "environment": [
                              {
                                "name": "STAGE",
                                "value": "prod"
                              },
                              {
                                "name": "DATABASE_USERNAME",
                                "value": "postgres"
                              }
                            ],
                            "secrets": []
                          }
                        ],
                        "cpu": "256",
                        "executionRoleArn": {
                          "Fn::GetAtt": [
                            "prodTaskDefExecutionRole257EB6D8",
                            "Arn"
                          ]
                        },
                        "family": "ecsstackprodTaskDef0A101E67",
                        "memory": "512",
                        "networkMode": "awsvpc",
                        "requiresCompatibilities": [
                          "FARGATE"
                        ],
                        "taskRoleArn": {
                          "Fn::GetAtt": [
                            "prodTaskDefTaskRole1294F326",
                            "Arn"
                          ]
                        }
                      }
                    }
                  },
                  "Web": {
                    "id": "Web",
                    "path": "ecs-stack/prod/TaskDef/Web",
                    "children": {
                      "LogGroup": {
                        "id": "LogGroup",
                        "path": "ecs-stack/prod/TaskDef/Web/LogGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ecs-stack/prod/TaskDef/Web/LogGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                              "aws:cdk:cloudformation:props": {}
                            }
                          }
                        }
                      }
                    }
                  },
                  "ExecutionRole": {
                    "id": "ExecutionRole",
                    "path": "ecs-stack/prod/TaskDef/ExecutionRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-stack/prod/TaskDef/ExecutionRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "ecs-stack/prod/TaskDef/ExecutionRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ecs-stack/prod/TaskDef/ExecutionRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "ecr:BatchCheckLayerAvailability",
                                        "ecr:GetDownloadUrlForLayer",
                                        "ecr:BatchGetImage"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "arn:aws:ecr:us-west-1:312093006778:repository/ecs-experiment"
                                    },
                                    {
                                      "Action": "ecr:GetAuthorizationToken",
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": [
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "prodTaskDefWebLogGroup785DE79F",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "prodTaskDefExecutionRoleDefaultPolicyC59EF026",
                                "roles": [
                                  {
                                    "Ref": "prodTaskDefExecutionRole257EB6D8"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "repo": {
                "id": "repo",
                "path": "ecs-stack/prod/repo"
              },
              "FargateService": {
                "id": "FargateService",
                "path": "ecs-stack/prod/FargateService",
                "children": {
                  "Service": {
                    "id": "Service",
                    "path": "ecs-stack/prod/FargateService/Service",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                      "aws:cdk:cloudformation:props": {
                        "cluster": {
                          "Ref": "prodCluster9288F49D"
                        },
                        "deploymentConfiguration": {
                          "maximumPercent": 200,
                          "minimumHealthyPercent": 50
                        },
                        "desiredCount": 2,
                        "enableEcsManagedTags": false,
                        "healthCheckGracePeriodSeconds": 60,
                        "launchType": "FARGATE",
                        "loadBalancers": [
                          {
                            "targetGroupArn": {
                              "Ref": "prodALBHTTPSListenerFargateServiceTargetGroup0990BEE5"
                            },
                            "containerName": "Web",
                            "containerPort": 5000
                          }
                        ],
                        "networkConfiguration": {
                          "awsvpcConfiguration": {
                            "assignPublicIp": "DISABLED",
                            "subnets": [
                              {
                                "Ref": "prodVPCPrivateSubnet1Subnet6794AAA7"
                              },
                              {
                                "Ref": "prodVPCPrivateSubnet2Subnet04B92CA7"
                              }
                            ],
                            "securityGroups": [
                              {
                                "Fn::GetAtt": [
                                  "prodFargateServiceSecurityGroup5FF63DF0",
                                  "GroupId"
                                ]
                              }
                            ]
                          }
                        },
                        "taskDefinition": {
                          "Ref": "prodTaskDef5D0A70F9"
                        }
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "ecs-stack/prod/FargateService/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-stack/prod/FargateService/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "ecs-stack/prod/FargateService/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "vpcId": {
                              "Ref": "prodVPC05D050A5"
                            }
                          }
                        }
                      },
                      "from ecsstackprodALBSecurityGroupC62EFF0E:5000": {
                        "id": "from ecsstackprodALBSecurityGroupC62EFF0E:5000",
                        "path": "ecs-stack/prod/FargateService/SecurityGroup/from ecsstackprodALBSecurityGroupC62EFF0E:5000",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                          "aws:cdk:cloudformation:props": {
                            "ipProtocol": "tcp",
                            "description": "Load balancer to target",
                            "fromPort": 5000,
                            "groupId": {
                              "Fn::GetAtt": [
                                "prodFargateServiceSecurityGroup5FF63DF0",
                                "GroupId"
                              ]
                            },
                            "sourceSecurityGroupId": {
                              "Fn::GetAtt": [
                                "prodALBSecurityGroup73EC3DD1",
                                "GroupId"
                              ]
                            },
                            "toPort": 5000
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "build": {
            "id": "build",
            "path": "ecs-stack/build",
            "children": {
              "Build": {
                "id": "Build",
                "path": "ecs-stack/build/Build",
                "children": {
                  "ArtifactsBucketEncryptionKey": {
                    "id": "ArtifactsBucketEncryptionKey",
                    "path": "ecs-stack/build/Build/ArtifactsBucketEncryptionKey",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-stack/build/Build/ArtifactsBucketEncryptionKey/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::KMS::Key",
                          "aws:cdk:cloudformation:props": {
                            "keyPolicy": {
                              "Statement": [
                                {
                                  "Action": [
                                    "kms:Create*",
                                    "kms:Describe*",
                                    "kms:Enable*",
                                    "kms:List*",
                                    "kms:Put*",
                                    "kms:Update*",
                                    "kms:Revoke*",
                                    "kms:Disable*",
                                    "kms:Get*",
                                    "kms:Delete*",
                                    "kms:ScheduleKeyDeletion",
                                    "kms:CancelKeyDeletion",
                                    "kms:GenerateDataKey"
                                  ],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":iam::",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":root"
                                        ]
                                      ]
                                    }
                                  },
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::GetAtt": [
                                        "buildBuildRoleFD82DEDD",
                                        "Arn"
                                      ]
                                    }
                                  },
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::GetAtt": [
                                        "buildBuildProjectRoleB1EDAC3C",
                                        "Arn"
                                      ]
                                    }
                                  },
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::GetAtt": [
                                        "buildBuildProjectRoleB1EDAC3C",
                                        "Arn"
                                      ]
                                    }
                                  },
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey"
                                  ],
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::GetAtt": [
                                        "buildBuildDeployDeployActionCodePipelineActionRole5B52B660",
                                        "Arn"
                                      ]
                                    }
                                  },
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      }
                    }
                  },
                  "ArtifactsBucket": {
                    "id": "ArtifactsBucket",
                    "path": "ecs-stack/build/Build/ArtifactsBucket",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-stack/build/Build/ArtifactsBucket/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                          "aws:cdk:cloudformation:props": {
                            "bucketEncryption": {
                              "serverSideEncryptionConfiguration": [
                                {
                                  "serverSideEncryptionByDefault": {
                                    "sseAlgorithm": "aws:kms",
                                    "kmsMasterKeyId": {
                                      "Fn::GetAtt": [
                                        "buildBuildArtifactsBucketEncryptionKey763B75A5",
                                        "Arn"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "Notifications": {
                        "id": "Notifications",
                        "path": "ecs-stack/build/Build/ArtifactsBucket/Notifications"
                      }
                    }
                  },
                  "ArtifactsBucketEncryptionKeyAlias": {
                    "id": "ArtifactsBucketEncryptionKeyAlias",
                    "path": "ecs-stack/build/Build/ArtifactsBucketEncryptionKeyAlias",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-stack/build/Build/ArtifactsBucketEncryptionKeyAlias/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::KMS::Alias",
                          "aws:cdk:cloudformation:props": {
                            "aliasName": "alias/codepipeline-ecsstackbuildbuildeec01162",
                            "targetKeyId": {
                              "Fn::GetAtt": [
                                "buildBuildArtifactsBucketEncryptionKey763B75A5",
                                "Arn"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "Role": {
                    "id": "Role",
                    "path": "ecs-stack/build/Build/Role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-stack/build/Build/Role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "codepipeline.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "ecs-stack/build/Build/Role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ecs-stack/build/Build/Role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*",
                                        "s3:DeleteObject*",
                                        "s3:PutObject*",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "buildBuildArtifactsBucketC48D24F0",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "buildBuildArtifactsBucketC48D24F0",
                                                  "Arn"
                                                ]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "kms:Decrypt",
                                        "kms:DescribeKey",
                                        "kms:Encrypt",
                                        "kms:ReEncrypt*",
                                        "kms:GenerateDataKey*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "buildBuildArtifactsBucketEncryptionKey763B75A5",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "buildBuildCodeBuildProjectCodePipelineActionRole4CD8144A",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "buildBuildDeployDeployActionCodePipelineActionRole5B52B660",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "buildBuildRoleDefaultPolicyE72CB198",
                                "roles": [
                                  {
                                    "Ref": "buildBuildRoleFD82DEDD"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "ecs-stack/build/Build/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CodePipeline::Pipeline",
                      "aws:cdk:cloudformation:props": {
                        "roleArn": {
                          "Fn::GetAtt": [
                            "buildBuildRoleFD82DEDD",
                            "Arn"
                          ]
                        },
                        "stages": [
                          {
                            "name": "Source",
                            "actions": [
                              {
                                "name": "Source",
                                "outputArtifacts": [
                                  {
                                    "name": "SourceOutput"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Source",
                                  "version": "1",
                                  "owner": "ThirdParty",
                                  "provider": "GitHub"
                                },
                                "configuration": {
                                  "Owner": "awans",
                                  "Repo": "ecs-test",
                                  "Branch": "master",
                                  "OAuthToken": "{{resolve:secretsmanager:/ecs-pipeline/secrets/github/token:SecretString:::}}",
                                  "PollForSourceChanges": false
                                },
                                "runOrder": 1
                              }
                            ]
                          },
                          {
                            "name": "Build",
                            "actions": [
                              {
                                "name": "CodeBuildProject",
                                "inputArtifacts": [
                                  {
                                    "name": "SourceOutput"
                                  }
                                ],
                                "outputArtifacts": [
                                  {
                                    "name": "BuildOutput"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Build",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "CodeBuild"
                                },
                                "configuration": {
                                  "ProjectName": {
                                    "Ref": "buildBuildProject05D6E481"
                                  }
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "buildBuildCodeBuildProjectCodePipelineActionRole4CD8144A",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "name": "Deploy",
                            "actions": [
                              {
                                "name": "DeployAction",
                                "inputArtifacts": [
                                  {
                                    "name": "BuildOutput"
                                  }
                                ],
                                "actionTypeId": {
                                  "category": "Deploy",
                                  "version": "1",
                                  "owner": "AWS",
                                  "provider": "ECS"
                                },
                                "configuration": {
                                  "ClusterName": {
                                    "Ref": "prodCluster9288F49D"
                                  },
                                  "ServiceName": {
                                    "Fn::GetAtt": [
                                      "prodFargateServiceA1C0E60E",
                                      "Name"
                                    ]
                                  }
                                },
                                "runOrder": 1,
                                "roleArn": {
                                  "Fn::GetAtt": [
                                    "buildBuildDeployDeployActionCodePipelineActionRole5B52B660",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "artifactStore": {
                          "type": "S3",
                          "location": {
                            "Ref": "buildBuildArtifactsBucketC48D24F0"
                          },
                          "encryptionKey": {
                            "type": "KMS",
                            "id": {
                              "Fn::GetAtt": [
                                "buildBuildArtifactsBucketEncryptionKey763B75A5",
                                "Arn"
                              ]
                            }
                          }
                        },
                        "name": "ecs-pipeline",
                        "restartExecutionOnUpdate": true
                      }
                    }
                  },
                  "Source": {
                    "id": "Source",
                    "path": "ecs-stack/build/Build/Source",
                    "children": {
                      "Source": {
                        "id": "Source",
                        "path": "ecs-stack/build/Build/Source/Source",
                        "children": {
                          "WebhookResource": {
                            "id": "WebhookResource",
                            "path": "ecs-stack/build/Build/Source/Source/WebhookResource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::CodePipeline::Webhook",
                              "aws:cdk:cloudformation:props": {
                                "authentication": "GITHUB_HMAC",
                                "authenticationConfiguration": {
                                  "secretToken": "{{resolve:secretsmanager:/ecs-pipeline/secrets/github/token:SecretString:::}}"
                                },
                                "filters": [
                                  {
                                    "jsonPath": "$.ref",
                                    "matchEquals": "refs/heads/{Branch}"
                                  }
                                ],
                                "targetAction": "Source",
                                "targetPipeline": {
                                  "Ref": "buildBuild34D1ECBF"
                                },
                                "targetPipelineVersion": 1,
                                "registerWithThirdParty": true
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Build": {
                    "id": "Build",
                    "path": "ecs-stack/build/Build/Build",
                    "children": {
                      "CodeBuildProject": {
                        "id": "CodeBuildProject",
                        "path": "ecs-stack/build/Build/Build/CodeBuildProject",
                        "children": {
                          "CodePipelineActionRole": {
                            "id": "CodePipelineActionRole",
                            "path": "ecs-stack/build/Build/Build/CodeBuildProject/CodePipelineActionRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "ecs-stack/build/Build/Build/CodeBuildProject/CodePipelineActionRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "AWS": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":iam::",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":root"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "ecs-stack/build/Build/Build/CodeBuildProject/CodePipelineActionRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "ecs-stack/build/Build/Build/CodeBuildProject/CodePipelineActionRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "codebuild:BatchGetBuilds",
                                                "codebuild:StartBuild",
                                                "codebuild:StopBuild"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": [
                                                  "buildBuildProject05D6E481",
                                                  "Arn"
                                                ]
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "buildBuildCodeBuildProjectCodePipelineActionRoleDefaultPolicyE2EA5394",
                                        "roles": [
                                          {
                                            "Ref": "buildBuildCodeBuildProjectCodePipelineActionRole4CD8144A"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Deploy": {
                    "id": "Deploy",
                    "path": "ecs-stack/build/Build/Deploy",
                    "children": {
                      "DeployAction": {
                        "id": "DeployAction",
                        "path": "ecs-stack/build/Build/Deploy/DeployAction",
                        "children": {
                          "CodePipelineActionRole": {
                            "id": "CodePipelineActionRole",
                            "path": "ecs-stack/build/Build/Deploy/DeployAction/CodePipelineActionRole",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "ecs-stack/build/Build/Deploy/DeployAction/CodePipelineActionRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "AWS": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "arn:",
                                                  {
                                                    "Ref": "AWS::Partition"
                                                  },
                                                  ":iam::",
                                                  {
                                                    "Ref": "AWS::AccountId"
                                                  },
                                                  ":root"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    }
                                  }
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "ecs-stack/build/Build/Deploy/DeployAction/CodePipelineActionRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "ecs-stack/build/Build/Deploy/DeployAction/CodePipelineActionRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "ecs:DescribeServices",
                                                "ecs:DescribeTaskDefinition",
                                                "ecs:DescribeTasks",
                                                "ecs:ListTasks",
                                                "ecs:RegisterTaskDefinition",
                                                "ecs:UpdateService"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": "iam:PassRole",
                                              "Condition": {
                                                "StringEqualsIfExists": {
                                                  "iam:PassedToService": [
                                                    "ec2.amazonaws.com",
                                                    "ecs-tasks.amazonaws.com"
                                                  ]
                                                }
                                              },
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": [
                                                "s3:GetObject*",
                                                "s3:GetBucket*",
                                                "s3:List*"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": [
                                                {
                                                  "Fn::GetAtt": [
                                                    "buildBuildArtifactsBucketC48D24F0",
                                                    "Arn"
                                                  ]
                                                },
                                                {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      {
                                                        "Fn::GetAtt": [
                                                          "buildBuildArtifactsBucketC48D24F0",
                                                          "Arn"
                                                        ]
                                                      },
                                                      "/*"
                                                    ]
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "Action": [
                                                "kms:Decrypt",
                                                "kms:DescribeKey"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": [
                                                  "buildBuildArtifactsBucketEncryptionKey763B75A5",
                                                  "Arn"
                                                ]
                                              }
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "buildBuildDeployDeployActionCodePipelineActionRoleDefaultPolicy6B0199A5",
                                        "roles": [
                                          {
                                            "Ref": "buildBuildDeployDeployActionCodePipelineActionRole5B52B660"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "BuildProject": {
                "id": "BuildProject",
                "path": "ecs-stack/build/BuildProject",
                "children": {
                  "Role": {
                    "id": "Role",
                    "path": "ecs-stack/build/BuildProject/Role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-stack/build/BuildProject/Role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "codebuild.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "ecs-stack/build/BuildProject/Role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "ecs-stack/build/BuildProject/Role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":logs:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":log-group:/aws/codebuild/",
                                              {
                                                "Ref": "buildBuildProject05D6E481"
                                              }
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":logs:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":log-group:/aws/codebuild/",
                                              {
                                                "Ref": "buildBuildProject05D6E481"
                                              },
                                              ":*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "s3:GetObject*",
                                        "s3:GetBucket*",
                                        "s3:List*",
                                        "s3:DeleteObject*",
                                        "s3:PutObject*",
                                        "s3:Abort*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "buildBuildArtifactsBucketC48D24F0",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "buildBuildArtifactsBucketC48D24F0",
                                                  "Arn"
                                                ]
                                              },
                                              "/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "kms:Decrypt",
                                        "kms:DescribeKey",
                                        "kms:Encrypt",
                                        "kms:ReEncrypt*",
                                        "kms:GenerateDataKey*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "buildBuildArtifactsBucketEncryptionKey763B75A5",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": [
                                        "kms:Decrypt",
                                        "kms:Encrypt",
                                        "kms:ReEncrypt*",
                                        "kms:GenerateDataKey*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "buildBuildArtifactsBucketEncryptionKey763B75A5",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "buildBuildProjectRoleDefaultPolicy5FB40503",
                                "roles": [
                                  {
                                    "Ref": "buildBuildProjectRoleB1EDAC3C"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "ecs-stack/build/BuildProject/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                      "aws:cdk:cloudformation:props": {
                        "artifacts": {
                          "type": "CODEPIPELINE"
                        },
                        "environment": {
                          "type": "LINUX_CONTAINER",
                          "image": "aws/codebuild/docker:18.09.0",
                          "privilegedMode": true,
                          "computeType": "BUILD_GENERAL1_SMALL"
                        },
                        "serviceRole": {
                          "Fn::GetAtt": [
                            "buildBuildProjectRoleB1EDAC3C",
                            "Arn"
                          ]
                        },
                        "source": {
                          "type": "CODEPIPELINE",
                          "buildSpec": "buildspec.yml"
                        },
                        "encryptionKey": {
                          "Fn::GetAtt": [
                            "buildBuildArtifactsBucketEncryptionKey763B75A5",
                            "Arn"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}