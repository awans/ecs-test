{
  "Resources": {
    "prodVPC05D050A5": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/21",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-stack/prod/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/Resource"
      }
    },
    "prodVPCPublicSubnet1SubnetBD79F0E4": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/23",
        "VpcId": {
          "Ref": "prodVPC05D050A5"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-stack/prod/VPC/PublicSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PublicSubnet1/Subnet"
      }
    },
    "prodVPCPublicSubnet1RouteTable44708A45": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "prodVPC05D050A5"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-stack/prod/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PublicSubnet1/RouteTable"
      }
    },
    "prodVPCPublicSubnet1RouteTableAssociationFFE8BBFF": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "prodVPCPublicSubnet1RouteTable44708A45"
        },
        "SubnetId": {
          "Ref": "prodVPCPublicSubnet1SubnetBD79F0E4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PublicSubnet1/RouteTableAssociation"
      }
    },
    "prodVPCPublicSubnet1DefaultRouteECAAF670": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "prodVPCPublicSubnet1RouteTable44708A45"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "prodVPCIGW0B427BB6"
        }
      },
      "DependsOn": [
        "prodVPCVPCGWDD93F813"
      ],
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PublicSubnet1/DefaultRoute"
      }
    },
    "prodVPCPublicSubnet1EIPE7EB2C15": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-stack/prod/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PublicSubnet1/EIP"
      }
    },
    "prodVPCPublicSubnet1NATGateway3F669DFC": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "prodVPCPublicSubnet1EIPE7EB2C15",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "prodVPCPublicSubnet1SubnetBD79F0E4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-stack/prod/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PublicSubnet1/NATGateway"
      }
    },
    "prodVPCPublicSubnet2SubnetBD0F8E17": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/23",
        "VpcId": {
          "Ref": "prodVPC05D050A5"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-stack/prod/VPC/PublicSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PublicSubnet2/Subnet"
      }
    },
    "prodVPCPublicSubnet2RouteTableFE407696": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "prodVPC05D050A5"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-stack/prod/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PublicSubnet2/RouteTable"
      }
    },
    "prodVPCPublicSubnet2RouteTableAssociationFC5B8DDF": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "prodVPCPublicSubnet2RouteTableFE407696"
        },
        "SubnetId": {
          "Ref": "prodVPCPublicSubnet2SubnetBD0F8E17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PublicSubnet2/RouteTableAssociation"
      }
    },
    "prodVPCPublicSubnet2DefaultRoute14E755F8": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "prodVPCPublicSubnet2RouteTableFE407696"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "prodVPCIGW0B427BB6"
        }
      },
      "DependsOn": [
        "prodVPCVPCGWDD93F813"
      ],
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PublicSubnet2/DefaultRoute"
      }
    },
    "prodVPCPublicSubnet2EIPB7299D42": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-stack/prod/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PublicSubnet2/EIP"
      }
    },
    "prodVPCPublicSubnet2NATGatewayF40B99E5": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "prodVPCPublicSubnet2EIPB7299D42",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "prodVPCPublicSubnet2SubnetBD0F8E17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-stack/prod/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PublicSubnet2/NATGateway"
      }
    },
    "prodVPCPrivateSubnet1Subnet6794AAA7": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.4.0/23",
        "VpcId": {
          "Ref": "prodVPC05D050A5"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-stack/prod/VPC/PrivateSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PrivateSubnet1/Subnet"
      }
    },
    "prodVPCPrivateSubnet1RouteTableB86A28E0": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "prodVPC05D050A5"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-stack/prod/VPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PrivateSubnet1/RouteTable"
      }
    },
    "prodVPCPrivateSubnet1RouteTableAssociation4740BFF4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "prodVPCPrivateSubnet1RouteTableB86A28E0"
        },
        "SubnetId": {
          "Ref": "prodVPCPrivateSubnet1Subnet6794AAA7"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "prodVPCPrivateSubnet1DefaultRoute32494609": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "prodVPCPrivateSubnet1RouteTableB86A28E0"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "prodVPCPublicSubnet1NATGateway3F669DFC"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PrivateSubnet1/DefaultRoute"
      }
    },
    "prodVPCPrivateSubnet2Subnet04B92CA7": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.6.0/23",
        "VpcId": {
          "Ref": "prodVPC05D050A5"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-stack/prod/VPC/PrivateSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PrivateSubnet2/Subnet"
      }
    },
    "prodVPCPrivateSubnet2RouteTableCDBE868D": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "prodVPC05D050A5"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-stack/prod/VPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PrivateSubnet2/RouteTable"
      }
    },
    "prodVPCPrivateSubnet2RouteTableAssociationA818E6F1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "prodVPCPrivateSubnet2RouteTableCDBE868D"
        },
        "SubnetId": {
          "Ref": "prodVPCPrivateSubnet2Subnet04B92CA7"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "prodVPCPrivateSubnet2DefaultRouteC07EE54C": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "prodVPCPrivateSubnet2RouteTableCDBE868D"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "prodVPCPublicSubnet2NATGatewayF40B99E5"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/PrivateSubnet2/DefaultRoute"
      }
    },
    "prodVPCIGW0B427BB6": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-stack/prod/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/IGW"
      }
    },
    "prodVPCVPCGWDD93F813": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "prodVPC05D050A5"
        },
        "InternetGatewayId": {
          "Ref": "prodVPCIGW0B427BB6"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/VPC/VPCGW"
      }
    },
    "prodALB6014B766": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "prodALBSecurityGroup73EC3DD1",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "prodVPCPublicSubnet1SubnetBD79F0E4"
          },
          {
            "Ref": "prodVPCPublicSubnet2SubnetBD0F8E17"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "prodVPCPublicSubnet1DefaultRouteECAAF670",
        "prodVPCPublicSubnet2DefaultRoute14E755F8"
      ],
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/ALB/Resource"
      }
    },
    "prodALBSecurityGroup73EC3DD1": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB ecsstackprodALB15656B4B",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443
          }
        ],
        "VpcId": {
          "Ref": "prodVPC05D050A5"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/ALB/SecurityGroup/Resource"
      }
    },
    "prodALBSecurityGrouptoecsstackprodFargateServiceSecurityGroup3F6B27D35000AF4E378B": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "prodALBSecurityGroup73EC3DD1",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "prodFargateServiceSecurityGroup5FF63DF0",
            "GroupId"
          ]
        },
        "FromPort": 5000,
        "ToPort": 5000
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/ALB/SecurityGroup/to ecsstackprodFargateServiceSecurityGroup3F6B27D3:5000"
      }
    },
    "prodALBHTTPListener41F60B57": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "RedirectConfig": {
              "Protocol": "HTTPS",
              "StatusCode": "HTTP_301"
            },
            "Type": "redirect"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "prodALB6014B766"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/ALB/HTTPListener/Resource"
      }
    },
    "prodALBHTTPSListenerAE63E292": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "prodALBHTTPSListenerFargateServiceTargetGroup0990BEE5"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "prodALB6014B766"
        },
        "Port": 443,
        "Protocol": "HTTPS",
        "Certificates": [
          {
            "CertificateArn": "arn:aws:acm:us-west-1:312093006778:certificate/e00b73a0-f919-4ea0-a2d8-81f985331665"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/ALB/HTTPSListener/Resource"
      }
    },
    "prodALBHTTPSListenerFargateServiceTargetGroup0990BEE5": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 5000,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "VpcId": {
          "Ref": "prodVPC05D050A5"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/ALB/HTTPSListener/FargateServiceTargetGroup/Resource"
      }
    },
    "prodCluster9288F49D": {
      "Type": "AWS::ECS::Cluster",
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/Cluster/Resource"
      }
    },
    "prodTaskDefTaskRole1294F326": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/TaskDef/TaskRole/Resource"
      }
    },
    "prodTaskDef5D0A70F9": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "STAGE",
                "Value": "prod"
              },
              {
                "Name": "DATABASE_USERNAME",
                "Value": "postgres"
              }
            ],
            "Essential": true,
            "Image": {
              "Fn::Join": [
                "",
                [
                  "312093006778.dkr.ecr.us-west-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/ecs-experiment:latest"
                ]
              ]
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "prodTaskDefWebLogGroup785DE79F"
                },
                "awslogs-stream-prefix": "prod-ECSCluster",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "Name": "Web",
            "PortMappings": [
              {
                "ContainerPort": 5000,
                "Protocol": "tcp"
              }
            ],
            "Secrets": []
          }
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "prodTaskDefExecutionRole257EB6D8",
            "Arn"
          ]
        },
        "Family": "ecsstackprodTaskDef0A101E67",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "prodTaskDefTaskRole1294F326",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/TaskDef/Resource"
      }
    },
    "prodTaskDefWebLogGroup785DE79F": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/TaskDef/Web/LogGroup/Resource"
      }
    },
    "prodTaskDefExecutionRole257EB6D8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/TaskDef/ExecutionRole/Resource"
      }
    },
    "prodTaskDefExecutionRoleDefaultPolicyC59EF026": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:ecr:us-west-1:312093006778:repository/ecs-experiment"
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "prodTaskDefWebLogGroup785DE79F",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "prodTaskDefExecutionRoleDefaultPolicyC59EF026",
        "Roles": [
          {
            "Ref": "prodTaskDefExecutionRole257EB6D8"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/TaskDef/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "prodFargateServiceA1C0E60E": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "prodCluster9288F49D"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "Web",
            "ContainerPort": 5000,
            "TargetGroupArn": {
              "Ref": "prodALBHTTPSListenerFargateServiceTargetGroup0990BEE5"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "prodFargateServiceSecurityGroup5FF63DF0",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "prodVPCPrivateSubnet1Subnet6794AAA7"
              },
              {
                "Ref": "prodVPCPrivateSubnet2Subnet04B92CA7"
              }
            ]
          }
        },
        "TaskDefinition": {
          "Ref": "prodTaskDef5D0A70F9"
        }
      },
      "DependsOn": [
        "prodALBHTTPSListenerFargateServiceTargetGroup0990BEE5",
        "prodALBHTTPSListenerAE63E292"
      ],
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/FargateService/Service"
      }
    },
    "prodFargateServiceSecurityGroup5FF63DF0": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ecs-stack/prod/FargateService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "prodVPC05D050A5"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/FargateService/SecurityGroup/Resource"
      }
    },
    "prodFargateServiceSecurityGroupfromecsstackprodALBSecurityGroupC62EFF0E50008B939710": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 5000,
        "GroupId": {
          "Fn::GetAtt": [
            "prodFargateServiceSecurityGroup5FF63DF0",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "prodALBSecurityGroup73EC3DD1",
            "GroupId"
          ]
        },
        "ToPort": 5000
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/prod/FargateService/SecurityGroup/from ecsstackprodALBSecurityGroupC62EFF0E:5000"
      }
    },
    "buildBuildArtifactsBucketEncryptionKey763B75A5": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "buildBuildRoleFD82DEDD",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "buildBuildProjectRoleB1EDAC3C",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "buildBuildProjectRoleB1EDAC3C",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "buildBuildDeployDeployActionCodePipelineActionRole5B52B660",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ecs-stack/build/Build/ArtifactsBucketEncryptionKey/Resource"
      }
    },
    "buildBuildArtifactsBucketC48D24F0": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "buildBuildArtifactsBucketEncryptionKey763B75A5",
                    "Arn"
                  ]
                },
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ecs-stack/build/Build/ArtifactsBucket/Resource"
      }
    },
    "buildBuildArtifactsBucketEncryptionKeyAlias97FEE061": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": "alias/codepipeline-ecsstackbuildbuildeec01162",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "buildBuildArtifactsBucketEncryptionKey763B75A5",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ecs-stack/build/Build/ArtifactsBucketEncryptionKeyAlias/Resource"
      }
    },
    "buildBuildRoleFD82DEDD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/build/Build/Role/Resource"
      }
    },
    "buildBuildRoleDefaultPolicyE72CB198": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "buildBuildArtifactsBucketC48D24F0",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "buildBuildArtifactsBucketC48D24F0",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "buildBuildArtifactsBucketEncryptionKey763B75A5",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "buildBuildCodeBuildProjectCodePipelineActionRole4CD8144A",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "buildBuildDeployDeployActionCodePipelineActionRole5B52B660",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "buildBuildRoleDefaultPolicyE72CB198",
        "Roles": [
          {
            "Ref": "buildBuildRoleFD82DEDD"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/build/Build/Role/DefaultPolicy/Resource"
      }
    },
    "buildBuild34D1ECBF": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "buildBuildRoleFD82DEDD",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1"
                },
                "Configuration": {
                  "Owner": "awans",
                  "Repo": "ecs-test",
                  "Branch": "master",
                  "OAuthToken": "{{resolve:secretsmanager:/ecs-pipeline/secrets/github/token:SecretString:github-token::}}",
                  "PollForSourceChanges": false
                },
                "Name": "Source",
                "OutputArtifacts": [
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "RunOrder": 1
              }
            ],
            "Name": "Source"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "buildBuildProject05D6E481"
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "Name": "CodeBuildProject",
                "OutputArtifacts": [
                  {
                    "Name": "BuildOutput"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "buildBuildCodeBuildProjectCodePipelineActionRole4CD8144A",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Build"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "ECS",
                  "Version": "1"
                },
                "Configuration": {
                  "ClusterName": {
                    "Ref": "prodCluster9288F49D"
                  },
                  "ServiceName": {
                    "Fn::GetAtt": [
                      "prodFargateServiceA1C0E60E",
                      "Name"
                    ]
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "BuildOutput"
                  }
                ],
                "Name": "DeployAction",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "buildBuildDeployDeployActionCodePipelineActionRole5B52B660",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Deploy"
          }
        ],
        "ArtifactStore": {
          "EncryptionKey": {
            "Id": {
              "Fn::GetAtt": [
                "buildBuildArtifactsBucketEncryptionKey763B75A5",
                "Arn"
              ]
            },
            "Type": "KMS"
          },
          "Location": {
            "Ref": "buildBuildArtifactsBucketC48D24F0"
          },
          "Type": "S3"
        },
        "Name": "ecs-pipeline",
        "RestartExecutionOnUpdate": true
      },
      "DependsOn": [
        "buildBuildRoleDefaultPolicyE72CB198",
        "buildBuildRoleFD82DEDD"
      ],
      "Metadata": {
        "aws:cdk:path": "ecs-stack/build/Build/Resource"
      }
    },
    "buildBuildSourceWebhookResource967BDC32": {
      "Type": "AWS::CodePipeline::Webhook",
      "Properties": {
        "Authentication": "GITHUB_HMAC",
        "AuthenticationConfiguration": {
          "SecretToken": "{{resolve:secretsmanager:/ecs-pipeline/secrets/github/token:SecretString:github-token::}}"
        },
        "Filters": [
          {
            "JsonPath": "$.ref",
            "MatchEquals": "refs/heads/{Branch}"
          }
        ],
        "TargetAction": "Source",
        "TargetPipeline": {
          "Ref": "buildBuild34D1ECBF"
        },
        "TargetPipelineVersion": 1,
        "RegisterWithThirdParty": true
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/build/Build/Source/Source/WebhookResource"
      }
    },
    "buildBuildCodeBuildProjectCodePipelineActionRole4CD8144A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/build/Build/Build/CodeBuildProject/CodePipelineActionRole/Resource"
      }
    },
    "buildBuildCodeBuildProjectCodePipelineActionRoleDefaultPolicyE2EA5394": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "buildBuildProject05D6E481",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "buildBuildCodeBuildProjectCodePipelineActionRoleDefaultPolicyE2EA5394",
        "Roles": [
          {
            "Ref": "buildBuildCodeBuildProjectCodePipelineActionRole4CD8144A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/build/Build/Build/CodeBuildProject/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "buildBuildDeployDeployActionCodePipelineActionRole5B52B660": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/build/Build/Deploy/DeployAction/CodePipelineActionRole/Resource"
      }
    },
    "buildBuildDeployDeployActionCodePipelineActionRoleDefaultPolicy6B0199A5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecs:DescribeServices",
                "ecs:DescribeTaskDefinition",
                "ecs:DescribeTasks",
                "ecs:ListTasks",
                "ecs:RegisterTaskDefinition",
                "ecs:UpdateService"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "iam:PassRole",
              "Condition": {
                "StringEqualsIfExists": {
                  "iam:PassedToService": [
                    "ec2.amazonaws.com",
                    "ecs-tasks.amazonaws.com"
                  ]
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "buildBuildArtifactsBucketC48D24F0",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "buildBuildArtifactsBucketC48D24F0",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "buildBuildArtifactsBucketEncryptionKey763B75A5",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "buildBuildDeployDeployActionCodePipelineActionRoleDefaultPolicy6B0199A5",
        "Roles": [
          {
            "Ref": "buildBuildDeployDeployActionCodePipelineActionRole5B52B660"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/build/Build/Deploy/DeployAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "buildBuildProjectRoleB1EDAC3C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryFullAccess"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/build/BuildProject/Role/Resource"
      }
    },
    "buildBuildProjectRoleDefaultPolicy5FB40503": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "buildBuildProject05D6E481"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "buildBuildProject05D6E481"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "buildBuildArtifactsBucketC48D24F0",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "buildBuildArtifactsBucketC48D24F0",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "buildBuildArtifactsBucketEncryptionKey763B75A5",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "buildBuildArtifactsBucketEncryptionKey763B75A5",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "buildBuildProjectRoleDefaultPolicy5FB40503",
        "Roles": [
          {
            "Ref": "buildBuildProjectRoleB1EDAC3C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/build/BuildProject/Role/DefaultPolicy/Resource"
      }
    },
    "buildBuildProject05D6E481": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/docker:18.09.0",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "buildBuildProjectRoleB1EDAC3C",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": "buildspec.yml",
          "Type": "CODEPIPELINE"
        },
        "EncryptionKey": {
          "Fn::GetAtt": [
            "buildBuildArtifactsBucketEncryptionKey763B75A5",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecs-stack/build/BuildProject/Resource"
      }
    }
  }
}